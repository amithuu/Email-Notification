Learn AWS:
    used in : Compute, storage, network security, blockchain, machine learning, Ai, Robot development, video production


what is client -server model: 
        In computing, a client can be a web browser or desktop application that a person interacts with to make requests to computer servers. 
            A server can be services, such as Amazon Elastic Compute Cloud (Amazon EC2) â€“ a type of virtual server.


** what is cloud computing: The on-demand delivery of IT-resources over the internet with pay-as-you-go pricing. **


-----------Amazon Elastic Cloud Compute [EC2]------------

        EC2: uses: highly flexible , cost effective quick

        EC2 runs on a physical machine with the virtualization technology.

        Multitenancy :Sharing underlying hardware between virtual machines.


        Vertical Scaling: Where in here we can increase or decrease the size and no of CPUs as we needed.


        Types of instances available:

                [Caas: Compute as a Service.]

        EC2 Instance Families:
                : General Purpose
                : Compute Optimized 
                : Memory Optimized
                : Accelerated computing
                : Storage Optimized


        General Purpose: [balance of compute, memory, and networking resources]
                                        : it has Balanced resources
                                        : Diverse workloads
        use it for deploying or storing     : Web servers
                                        : Code repository

        Compute Optimized: [which uses batch processing workload]
                : Compute intensive tasks
                : Gaming servers
                : high performance computing
                : Scientific modeling

        Memory Optimized : [workloads that process large datasets in memory, such as high-performance databases.]
                : Memory Intensive tasks

        Accelerated computing: 
                : Floating point number calculations
                : Graphics processing
                : data pattern matching
                : utilize hardware accelerators

        Storage Optimized:[workloads that require high, sequential read and write access to large datasets on local storage.]
                : High performance for locally stored data


        EC2 Instance Types:
                :on-demand
                :Savings plan
                :Reserved instances
                :Spot instances
                :Dedicated hosts
        
        on-Demand:  only pay for the duration that your instance runs for
        Savings plan: offers low prices on EC2 usage in exchange for a commitment to a consistent amount of usage measured in dollars per hour for a one or three-year term.
                [ telling them i will use instance for some years i need to them to costs only for this much dollar.]
        Reserved Instance: here we will reserve the instance for some years, where we can pay , 
                                :when we commit for years on it and pay fully.
                                :when we use we pay for it.
                                :no pay at the beginning.
        Spot Instance: here we use some spare instance, like some one used and not using now like that, 
                                catch is : if aws needs that they can re claim it when they need.[provides a 2 min warning before re-claim ]
        Dedicated Host: These are dedicated only for some usage purpose , where it cannot be shared to any one.


        Scalability ans Elasticity:
        This tells how capacity as grow ans shrink based on business needs
        
        Amazon EC2 Auto Scaling: which increases the number of resources needed for the time and degrades the resources we not in needed.

----------Amazon Elastic Load Balancing--------------

        Network Balancing: When there is an increase in requests but all the request are hitting the same instance, although we have multiple instances 
                : to solve this we have host which diverts the requests to the ideal instance based on their no of request they are holing.

        ["Load Balancing" :  Ensuring that no single Amazon EC2 instance has to carry the full workload on its own.]

        Elastic Load Balancing: service that automatically distributes incoming application traffic across multiple resources, such as Amazon EC2 instances. 

                : an load balancer acts as single point to contact to all the incoming traffic from which it spreads across the multiple instances and loads which have less traffic..


--------- Amazon SQS [simple Queue Services] ---------------------

        messaging Queue: The basic idea behind this is 
                        when there are 2 applications if one sends request to another, if both are available then looks good,
                        if any one of those fails, then both of the applications fails[ this is called tightly coupled.]


        SQS: To solve this we use SQS[lightly coupled] , where when a request is send from the client it stores in {sqs queue} and sends to to server and gets the response
                        : if server fail then , until the server is {up and running} the requests are being {queued in sqs}

        SQS: it send messages and store messages in queue and receive messages between software components at any volume, without loosing any messages.

        payload: Data contained within a message   [eg: a toy box with lots of toys, here the important data is toys inside the toy box soo, {message:toy box}{data: lots of toys} ] 


----------- Amazon SNS [Simple Notification Service]-------------

        SNS: its an channel for messages to be delivered.
                : this can be { text message or a mobile push notification or an email message }


---------Server Less Servers------------

        ------Lambda: where you upload your code to the server and no need for managing anything, as you do in EC2..

        Docker: if you are using docker's in EC2, then u need to manage the configuration's.

        ---------Amazon EKS[ Elastic kubernetes Services ] or ECS[ Elastic Container Services ] --------
                EKS or ECS: Which run's the docker services.

                AWS Fargate: Where its a serverless service that manages all teh configurations for teh docker services..


        -------------- Key Differences ----------------

        EC2:
        : If you need to host traditional applications.
        : If needed full access on OS and configurations.

        Docker:
        : If you want to run docker or kubernetes based workloads on AWS [containers==dockers or kubernetes]
                : it has 2 tools EKS or ECS services to manage the containers
                        : docker == ECS
                        : kubernetes == EKS

        : Then u need to choose platform that you want to run the containers on 
                : On EC2 which you need to manage the configurations.
                : On Fargate which is managed by AWS, a serverless Application.

        Lambda:
        : if you need to run service oriented applications or event driven applications.
        : And you don't need any access on the configurations on managing servers.
        : Then use Lambda

        : if you just need to focus on code and when ever the code runs or http request is triggered then u need to pay.
        : No need of managing anything [ no instances no containers ]

        -------------- Key Differences ----------------



---------Amazon Global Regions-------------

        : High availability and fault tolerance 
   The 4 business factors to make the Region Decision:
        : Compliance
        : Proximity
        : Feature Availability
        : Pricing

  Compliance: the region where your data centre needs to be based on requirements or the Company resides.

  Proximity: Locating close to customer/client base.
                : where our most of teh customers reside that region should be taken.

                : if we have customer in india and our centre in china then its latency, so its necessary to be in india.
                        : latency:The time it takes for data to be sent and received.
  
  Feature Availability: All the regions doesn't have al the features availability, so choosing teh region which holds our physical hardware needs is best choice .

  Pricing: Each Region costs differently for the same features based on {TAX structure of that country}.

        {Regions: In a Single Region we will have any availability Zones, where if one fails we can access the other Zone.}

  ----Amazon CloudFront [CDS] [Content delivery Network]------
        : this uses Edge location service.

        : Keeping an cache or backup data in the near by Centre if your Main centre is Far Away.
                eg:[if your centre is in Tokyo, and some of your customers are in Mumbai, 
                        :then building a cache copy in mumbai for accessing and sending data with low latency and hight transfer speed ]

  -------- Amazon Outpost------------
        : If you need the data centre to be build inside our office, then you use Outpost Service.



-------AWS Service for interaction-------
        :AWS Management Console
        :AWS CLI
        :AWS SDK
        :other tools[AWS Elastic BeanStalk, AWS Elastic CLoudFormation]

  AWS Management Console: it is good to use when ur leaning although u need to do all things Manually, where the Human error is there.

  AWS CLI: a command line interface, using this we can create instance in a cod eof lines very quickly.

  AWS SDK: a Software, using this we can talk to the AWS in their own language using programming.

  AWS Elastic BeanStalk: a Tool which helps you to automate things just by providing the code and it manages all the other things.

        :you provide code and configuration settings, and Elastic Beanstalk deploys the resources necessary to perform the following tasks:
                : Adjust capacity
                : Load balancing
                : Automatic scaling
                : Application health monitoring

  AWS CloudFormation: a Tool which helps you to automate things just by providing the code and it manages all the other things.

        : It determines the right operations to perform when managing your stack and rolls back changes automatically if it detects errors.
        : Amazon CloudFront is a {content delivery service.}
        : It uses a network of edge locations to cache content and deliver content to customers all over the world.


--------Amazon Virtual Private Cloud [VPC] ------------
        : Its your own private network in AWS
        : We keep our EC2 instances , ELB inside this.
        : Using VPC we can make our instances or resources use by public over internet or private no internet access.

        : The public and private grouping of resources are known as subnets and they are ranges of IP addresses in your VPC. 
  
   If need to access EC2 inside VPC, we go thorugh these types 

  Internet Gateway [IGW]:
        : This is for Public Traffic,to let in and go out of the VPC.

  Virtual Private Gateway [VPGW]:
        : This ensures to allow only the Approved Network, like using VPN.

  [the VPGW is good but we receive public traffic as well, which makes latency, to avoid this we have]

 AWS Direct Connect [AWS DC]:
        : this allows you to connect direct {Fibre connection from your Data centre --> AWS} 


  ---------SUBNET----------

        SUBNET: A Instance which is inside VPC, it might br Private or Public.

  -------- Network Hardening----------

        The only reason to use Subnets inside the VPC is To control the access.

        Packet: Messages from the Internet.

  ----Network Access Control list[Network ACL]--- [stateless: it checks when coming in and going out]

        : Every Packet that tries to pass the subnet will be check by ACL
        : this ACL with check whether the packets has the permission to enter and leave the subnet, 
                : based on by whom is was sent and for what. 

  -----Security Group---- [stateful: it check when coming not {not} while going out]

        : Every subnet has many EC2 instances, each instance will have its own ports to receive the message[packets]

        : Every Instance will have its own security group.[by default all ports and all IPs are blocked]
                :it can be modified to allow some ports [eg: https request]
        : When the packet enters the subnet 
                Security Group will check whether the packet has the permission to enter the instance or not. 
        

  ---------Key Differences------

        ACL: check while coming in and going out 
                : Acts as security for subnet
                : {default allows in and out.}

        Security Group: check only while coming in
                : Acts as security for instance
                : {default allows nothing.}



                eg: we have 2 subnet s1 and inside s1 we have instance i1 and same for s2 and i2

                step1   : when i1 wants to send message it will cross the i1 security group
                        : when i1 tries to get out from s1, the acl with check the permission.approved then
                        : messages tries to enter s2, where acl of s2 will check for permission, if approved then
                        : message tries to enter i2, where i2 will check for permission from its i2 security group, if approved 
                                : then message or packet is received..
                
                step2   : when coming back message will come out of i2 easily as no check at i2 security group for coming out,
                        : but to come out from s2, acl will check again , if approved
                        : then it tries to enter into i1, again acl will check the permission, if approved
                        : then it tries to go inside i1, where i1 security group will check for incoming, if approved
                                : then response is received.

  ---------Key Differences------


---------- Amazon Route 53 -----------
        The translation of Domain name to IP address is done by DNS [www.aws.com -> 192.1.1.1]

        : This service provides the Domain Name Services[DNS] for your application.
                DNS: when customer enter www.aws.com but this link as its own IP address like 192.1.1.1, which is understood by computer,
                        : this translation is done by DNS with the help of Route 53.

        : we can buy the domain names in here itself.



----------DataBase and Storage------------

        : When u launch the EC2, u will get the storage which is called {Instance Store Volumes}
                : Which when u terminate and re-start the instance, the data in the Volumes will be lost.
                        : Because the storage is connected with instance.
        : To solve this we use EBS

  ----Amazon Elastic Block Store [EBS] --------
        : Here the EBS Volumes is connected Directly with the AWS Host, so it doesn't affect the Volumes when u terminate Instances.
        
         : EBS comes in different Sizes, based on 
                : Size
                : Type
                : Configurations
        : We attach it to the EC2 instance and configure the application.

        : EBS provide To take the Incremental Backup's regularly called SnapShots.
        

  ------- Amazon Simple Storage Service [S3] -----------
        
        : its an storage service, which provides the unlimited data storage and retrieval.
                : Storage data as objects
                : Store objects in buckets  [ here storing file in hard disk is objects and storing file directories is bucket. ]
                : Upload a max object size of 5TB.
                : Version objects [ like a backup, where when ever the new data it updates teh older version is backed-up automatically]
                : Create Multiple Buckets and store in different classes and can add permissions as well
        
        Types of S3 Services:
                : Amazon S3 Static Web Site Hosting
                : Amazon S3 Standard
                : Amazon S3 Standard-Infrequent Access [S3 Standard-IA]
                : Amazon S3 Glacier Flexible Retrieval [GFR]

        --- Amazon S3 Standard ----
                : When you need to access teh data frequently, then we use this service
                : it is easy to retain the data, as multiple copies of data is stored in different Zones.

        --- Amazon S3 Static Web Site Hosting ----
                : We can have a website live with only html files adding the files to bucket with no animation.
                        :accessing the link of the Bucket to get the website running.

        --- Amazon S3 Standard-Infrequent Access [S3 Standard-IA] ----
                : When u need to store the backup and when needed to retrieve faster we use it.
                : when data is not used frequently and when needed can access faster retrieval.

        --- Amazon S3 Glacier Flexible Retrieval [GFR] ------
                : when u need to store data for several years and used only for retrieval purpose.
                : if u need to store data for several years and for Rare Retrieval.

                Amazon S3 Glacier Flexible Retrieval Volt Lock Policy : It has lock policy as well [WORM: write once read many]
                : Once you lock you cannot remove the policy.

        -- Amazon S3 Life Cycle Management ---
                : Where we can move our Data to the desired tiers we need [tiers: S3 Standard, S3-IA, S3-GFR ]
                : for teh first 90 days we can keep in S3-standard, after that we can move it to S3-IA for some 120 days, after that we can keep that in S3-GFR for low retrieval.
        
        
        -- key points --
        : Server less no need of Ec2 to launch them
        : web enabled, [just by sharing url link of bucket up's the website]
        : offers cost savings


--------- Key Differences-------

        : Amazon S3 standard: for faster and frequent retrieval

        : Amazon S3 Standard-Infrequent Access : for faster and in-frequent retrieval 

        : Amazon S3 Glacier Flexible Retrieval and Amazon S3 Glacier Deep Archive : for retrieval goes only in years of time. or 12 hours..

        : Amazon S3 Intelligent-Tiering : Automatically updated from Standard to Standard-Infrequent


--------- Key Differences-------

        ----------- diff between EBS and S3--------
        : Scenario: when there is an users upload an image and site will find the Animal images in that, 
                : then it has to go through and the all animal matching list.   
                : then we use S3

        : Scenario: when there is an object of 4tb need to update to storage.
                : then S3 will upload all the previous and new objects again, soo it is not suitable
                : But EBS will upload only the new objects to the old,  called block storage, it updates only the newly added data.
                : So here we use EBS


--------- Amazon Elastic File System [Amazon EFS] --------------

        : Here the data is stored in File System, so where the  request and retrieve of objects happens same time.
        : It uses linux  file system
        : auto scalable of storage for an object 
                        [ where in s3 its 5tb, in ebs its 2tb,  they wont scale]
        : it is a shared file system { multiple Instances } can access the data simultaneously.
        : its an regional Resource

        ----------- diff between EBS and EFS--------
        EBS:
           : it is connected with EC2
           : To attach EBS to EC2, both of them should be in same availability Zone.
           : Stores data in single availability Zone.
           : if objects more than 2tb comes it wont auto scale.
        EFS:
           : Multiple Instance can access and retrieval simultaneously.
           : Stores data in Multiple availability Zone.
           : Regional Resource [ any Ec2 in that Region can access]
           : if objects may be of any size it automatically Scales based on needs..


---------- Amazon Relational DataBase System [RDS] -----------

        : AWS supports [ Amazon Aurora, PostgreSQL, MYSQl, Oracle, Microsoft SQl Server, MariaDB ]

        : when u move ur database to Cloud we get to manage all the migrations and below stuffs 
                : Automated patching
                : backups
                : Redundancy
                : failover
                : Diaster Recovery
        
        : To Over come this AWS has its own Database
   
   --- Amazon Aurora -----
                : it is also an RDBMS Database.[like MYSQL etc..]
                : An enterprise-class relational database.

        : Which manages all the above stuffs 
        : Compatible with MySQl and PostgreSQL
        : Data replication [ 6 copies of data is available at any time]
        : Up to 15 read replicas [ we can upload up to 15 copies ]
        : Continues backup from S3
        : Point in time recovery 
                : Good for complex Queries


  --- Amazon DynamoDb ---
                : it is also an No-SQL/Non-Relational Database [A key value pair]

        : A serverless Database
        : Where the data is stored as items and items have their Attributes.[key : value]
        : Scaling od DB is done automatically.
        : Stores in multiple availability zones.
        : Super Faster response time.
                : Good for less complex Queries
        : Fully Managed 

        : eg how data is stored..

             Key	     Value

              	        Name: John Doe
              1         Address: 123 Any Street     
                        Favorite drink: Medium latte
                               
        
                        Name: Mary Major
               2        Address: 100 Main Street
                        Birthday: July 5, 1994
        

  --- Amazon Redshift ----
                : A data Warehousing Service provided by AWS. 
                        Data Warehousing : [eg: where the content page in book not only provides the Chapter name and page no: it also provide the summary and key points of that chapter from that and outside source books as well.]



------- Amazon DataBase Migration Service [DMS] -------------
        : To convert the database engine from one Db to another Db , use DMS.

        : The Source DataBase Remains fully operational during the migrations.
        : So Downtime is minimized.
        : The source and target db don't have to be same type.

        : Homogenous Database migrations: : As the Database Schema, data Types, Database Code are same..
                : Can convert from SQL -> RDS SQl
                : Can convert from PostgreSQl -> RDS PostgreSQl
                : Can convert from Oracle -> RDS Oracle
                        
                steps:
                        : A Source database can be in on-premises, or in a Ec2, on in a RDS
                                : and target db can be in EC2 or in RDS
                        : then start the migration task by connection source and target database.

        : Heterogenous Database migrations: : As the {Database Schema, data Types, Database Code} are Different..

                steps:
                        : Here first we need to convert them using AWS {Schema Conversion tool}
                                : which converts the Schema and Database code
                        : then start the migration task by connection source and target database.
                        
                  
                
        Other uses of DMS :
                : Development and test Db migrations
                : Db consolidations
                : Continues database replication

        Development and test Db migrations
                : A copy of production db to test for testing purpose.
        Db consolidations
                : When u have many db's and to merge them into single database
        Continues db replications
                : to store the continues backup's 

  ---Amazon DocumentDB [with MangoDB compatibility]------------
        : for more information with more attributes.[eg : Content management and catalogs]

  ---Amazon Neptune ------------
        : for social network,  fraud detection, and knowledge graphs. [like who is connected to who : linkedin facebook etc..]

  ---Amazon Managed Blockchain ------------
        : for the banking purpose.

  ---Amazon Quantum Ledger Database[QLD] ------------
        : none of teh records are deleted from it, for the ledger purpose we can sue this.

  ---Amazon Accelerators ------------
        Amazon ElastiCache:
                : Adding caching layers on top of the Database.
                        : which increases faster read time of common requests. 
         Amazon DynamoDb Accelerators[DAX]:
                : adding cache layers if you are using DynamoDb or non-relation database.

                
----- Security ------------

        : AWS provides a Shared Responsibility Model.
        : It is not only keeping resources secure is only the AWS, it is US as well
                
        Security of cloud is taken care by AWS: 
                        : Physical layer
                        : Network
                        : Hypervisor
                         : [it checks all type of incoming traffic base don the configurations provided,,]
        Security in cloud is taken care by US: 
                        : Operating System
                        : Application
                        : Data
                         : we need to configure which type of data and traffic need to be permitted on application.
                         : we need to keep an eye on the vulnerabilities of OS. 
 
  --------User Permission and Access --------------

        : As a owner i can provide  what the user can access.
        : A {Root} user is mentioned as Owner is AWS
                : Access and Control any resources in the account.
                : so as we cerate Root USer account, we need to turn on MultiFactorAuthentication[MFA] 
                : SO not only using login credentials it also adds  }Token based authentication}.

        : Each user will have different access permissions, to manage this we have
   
   -----AWS Identity and Access Management[IAM]----------
        : It is used to provide the access and permissions for the users.
        : We can create IAM Users, by default there will be Zero Permissions to that account.[not even cerate instances]
                : This is an JSON Document Policy.
                        : EFFECT == allow/deny
                        : ACTION  == any aws api call 
                        : RESOURCE == what aws resource teh api call is for

        Policies : As we cannot write for each user the access,we create policy 
        IAM Group: Created Group is attached with Policy.
                : Where in group we can add the users.
        
        Roles: 
                : We can provide a Associated Permissions to users
                : Allow or deny when ever needed
                : Assumed for Temporary amount of time.
                : no username and password 
                : Access to Temporary permissions
                : AWS Resources
                : Users
                : External identities
                : Applications
                : other AWS Services.
  
  ---- AWS Organizations --------
        : A central location to manage multiple AWS accounts 
          for   : Compliance
                : Permission /access
                : Security
                : Billing
                : Share Resources
        
        Main Features:
                : Centralized Management [where we can get all the accounts details]
                : Consolidated billing [we can use Primary account for billing and pay at once.[by combining all accounts bill]]
                : Hierarchical groupings of accounts
                : AWS Service and API actions access control for the each member account.[service control policies (SCPs)]
                        
  ---- AWS Artifact ----
        : is a service that provides AWS security and compliance reports and select online agreements.


  -------Distributed denial-of-service [DDOS]----------------
                DDoS (Distributed Denial of Service) attack is when many computers all try to use a website at the same time, making it so busy that it can't work properly and stops. 
                It's done on purpose to make the website go offline.
        
        Types of attacks:
                UDP Flood :In this attack the amount of return data is very large
                        :what is weather: where u will get a lot of stuffs, /so the attacker will keep on asking the same question  
                                from which our instance will be floated with lots of data.

                HTTP level attack : where the attacker keeps on asking the questions again and again.
                        so that the normal users will not get a change to ask the request.

                SlowLoris Attack : where the attacker will have a terribly slow internet connections.so that the other users will keep on waiting.


        Solutions:  
                UDP Flood: where we add an security level at the VPC [Network ACL], which casually exists the wrong responses.

                SlowLoris: where we can add a {ELASTIC LOAD Balancer} which distributes the other users to the instances until the slower request entire data comes.

                AWS Shield with AWS WAF[Web Application FIREWALL]: this will filter the incoming traffic with bad signatures
                        : this is an extreme machine learning technique, to recognize the new threads and filter them from bad requests.

        ---- AWS Key Management [AWS KMS] --------
                Encryption: Securing a message or data in a way that only authorized parties can access it.
                        : Create cryptographic keys.
                        : when data is in ideal stage it is in format of {cryptographic}

                        cases: Ideal data and in-transit data
                
                Ideal data: where data is kep ideal, at that time the data is kep in encrypted format.
                        : to get that data u need the right Key to decrypt.
                        : that key is given by KMS.

                in-transit data: where the data is transferring from server to the client. 
                        : we use SSL[secure sockets layer [ssl] ] for teh transmission, 
                        : until the client machine is certified data will not be transferred

        --- Amazon Inspector ---
                : it is used to check the security of that deployed application by running as automated security assessment.           
           which checks :
                        Network configuration or deviation is network.
                        Amazon agent 
                        Security assessment service [which has all the above 2 services in it]


        --- Amazon GuardDuty ---
                : it is an service which runs outside the application.
                : it uses integrated threat intelligence, nan-malicious IP address,anomalies detection, machine learning to find out the threads.


---- MONITORING AND ANALYSIS ----------- 
                : monitoring ths resource are working as required or not..
        
  ---- AMAZON CLOUDWATCH ----
                
                : monitoring the matrix and resources in live time.
                        METRICS : Variables tied to your resources.
                
        CLOUDWATCH ALARM:
                : we can keep an threshold for the warning.
                   : so we get an alarm when the service reaches that threshold.
                : It is integrated with SNS as well, so we can send sms.
        
        CLOUDWATCH DASHBOARD:
                : where in this dashboard we get to watch all the metrics of all our resources in real time.
        
        benefits:
                : Access all our metrics form a central location
                : Gain visibility into the applications, infrastructure and services.
                : Reduce mean time to resolution and improve total cost of ownership.
                : Drive insights to optimize the application and operational resources.

  ---- AMAZON CLOUDTRAIL ------

                : A Comprehension Auditing api tool.
                : Gets all the information of who what and when anything is changed in security or any aspects.
                : Events are typically updated in CloudTrail within 15 minutes after an API call


  ---- AMAZON TRUSTED ADVISOR ------

                : This is a service which runs like a health check and gets the alerts or suggestions what changes needed to make.
        
        some factors it checks
                : Cost Optimization
                : Performance
                : Security
                : Fault Tolerance
                : Service limits

        : it has messages service as well, which reminds you when it runs.


------ Pricing and Support ---------
        
  -- AWS FREE TIER --- 
                : always free
                : 12 months free
                : up to 5gb free in S3 for 12 months
                : Trails [ some services offer a short term free trial]
        
        Some Key services comes under is 
                : Amazon SageMaker
                : Amazon Comprehend Medical
                : Amazon DynamoDb
                : Amazon SNS
                : Amazon Cognito

  -- Pricing Concepts --
        : Pay for what you use
        : Pay less when you reserve
        : Pay less with volume-based discounts when you use more

  -- Pricing Calculators --
        : Create an estimate for the cost of your use cases on AWS 
        : The AWS Pricing Calculator(opens in a new tab) lets you explore AWS services and create an estimate for the cost of your use cases on AWS.

  -- Consolidated Billing --
        : Simplifies billing process [ can pay bill from primary account] 
                        [a feature of AWS Organization service.]
        : Share savings across accounts [u will get bulk discount for paying]
        : free to use 

  -- AWS Budgets --
        : Review how much cost your predicted AWS usage will incur by the end of the month
        : Keeping a Threshold for the Cost or any usage on resources and getting notified when it reaches that limit.

  -- AWS Cost Explorer --
        : Visualize and manage your AWS costs and usage over time
        : Keeps track of cost and services we have used and we can get teh reports as well.
        : allows you to visually see and analyze how you are spending money with AWS
        : It will show you which services you are spending the most money on, and it gives you 12 months of historical data.


    Some of the Support plans are there
        : AWS Basic Support
        : AWS Developer Support
        : AWS Business Support
        : AWS Enterprise On-Ramp Support:
        : AWS Enterprise Support


  -- AWS Basic Plan --
        : 24/7 customer service
        : Documentation
        : White papers
        : Support forums
        : AWS Trusted Advisor
        : AWS Personal Health Dashboard

   AWS Developer Support:
        : All Basic Support
        : Email Access to customer support with 24 hour response time.
        : responses are less than 12 hours if system are impaired.

  AWS Business Support:
        : All Basic Support
        : AWS Trusted Advisor with all the full checkup.
        : Direct Phone access to cloud support engineers
        : 4 hours of response time if production system is impaired and 1 hour response time when production system is down.
        : infrastructure Event management. [advertising features or like events.]
  
  AWS Enterprise On-Ramp Support:
        : All Basic, Developer, Business support
        : 30 min of response time for business critical workloads
        : Access to a pool of Technical Account Managers [TAMs]
                TAMs: they provide pro-active guidance and Optimization.
  
  AWS Enterprise Support:
        : All Basic, Developer, Business support
        : 15 min of response time for business critical workloads
        : Designated Technical Account Manager [TAMs]

  TAMs: They work on 6 pillars of teh Well-Architected Framework
        : Cost Optimization
        : Performance Efficiency
        : Security
        : Sustainability
        : Reliability
        : Operational Excellence

------ AWS MarketPlace -------
                "basically it is like we have service and providing to others"[we are aws providers now, or service providers]"

        : Service or resource is used to find third-party software that runs on AWS
        : It is a curated Digital catalog,that streamline and deploy your 3rd party applications that running on AWS infrastructure.

    One click Deployment: The customers can come and deploy their 3rd party applications in a pirated time.
    
    Pay as you go pricing : you can charge the vendors when only they use, and providing some free tier options. 

        Enterprise Focused feature:
                : Custom terms and pricing
                : A private marketplace [where u can have agreement for having a some softwares]
                : Integration into your procurement systems.
                : Cost management tools.
        
----- Migration and Innovation ------
        
        : If you want to migrate your applications to the cloud AWS services, you do migrations.
  
  -- AWS Cloud Adoption Framework [AWS CAF]:
                : it helps in migrating your application to cloud.

        : A group of people will Guide you to migrate the application.
        : Everyone cannot do this it needs a lot of knowledge and experience.

        It is divided into 6 perspectives to migrate.
                : Business
                : People
                : Governance {all 3 will look into business perspectives}
                : Platform
                : Security
                : Operations { all 3 will look int the technical perspectives}

        AWS CAF Action Plan
                : A action plan which guide your organization for cloud organization.

        Business Perspective: helps you to move from a model that separates business and IT strategies into a business model that integrates IT strategy.
        People Perspective: helps Human Resources (HR) employees prepare their teams for cloud adoption by updating organizational processes and staff skills to include cloud-based competencies.
        Governance Perspective : helps you to identify and implement best practices for IT governance and support business processes with technology.
        Platform Perspective: helps you design, implement, and optimize your AWS infrastructure based on your business goals and perspectives.
        Security Perspective: helps you structure the selection and implementation of permissions
        Operations Perspective: focuses on operating and recovering IT workloads to meet the requirements of your business stakeholders.


  -- Migration Strategy 6 R's---
        
        There are 6 main migration strategies.
                : ReHosting
                : RePlatform
                : Retire
                : Retain
                : RePurchasing
                : ReFactoring

        ReHosting : Called as lift and shift.
                : Move our application from old to AWS service.[no need to make any changes.]
                : u may not get all the benefits , but base don preview many got Cost cutting of 20%.

        RePlatforming: Called as lift tinker and shift.
                : involves selectively optimizing aspects of an application to achieve benefits in the cloud without changing the core architecture of the application.

                : migrating from one platform to AWS RDS
                : eg: MySQL to RDS MYSQL or upgrading to AWS Aurora
                : which significantly increases performance.

        
        Retire: Shutting down the un-used resources
                : involves removing an application that is no longer used or that can be turned off.
        
        Retain: Restarting the old resources.
                : use only when the resources needed, until keep it somewhere
        
        RePurchasing:  moving to New cloud 
                : involves replacing an existing application with a cloud-based version, such as software found in AWS Marketplace

                : Think as your old crm or cloud based contract is Ended
                : And you took the new cloud, which provides new software,
                : Installing new software might become easy or tough. 
        
        ReFactoring: New code
                : involves changing how an application is architected and developed, typically by using cloud-native features.

                : Adding new features to the product might optimize your infrastructure.

  -- AWS SNOW FAMILY --
        
        : To move data into the AWS, we have some services,
        : if you try to do it [ A network with 1gb speed moves 1Pb of data for 100 days ]

                AWS SNOWCONE
                AWS SNOWBALL EDGE
                AWS SNOWMOBILE
        

        AWS SNOWCONE : [8TB storage device] 
                : It is a Tiny small Device for Data transfer. [can hold up to 8TB of data]

                :AWS Snowcone is a small, rugged, and secure edge computing [EC2 or IOT] and data transfer device by Amazon Web Services (AWS). 
                        It's designed to collect, process, and move data to AWS, even in remote or harsh environments.

                : if you want to transfer data from your local storage to AWS Server or main Data Centre, you can use this.
                : you can transfer data thought internet or u can ship it directly to data centre. 
                eg: analytics data and more.

        
        AWS SNOWBALL EDGE: [data transfer and compute organized device] [ can hold up to 80TB of data]
                : Used to transfer large amount of data securely and efficiently to and from AWS.
                : even using this we can do some computing tasks as well [like image compression, video transcoding ]
        

        AWS SNOWMOBILE : A data transfer Truck the largest one. [can hold up tp 1,00,000 TB]
                : it has a capacity of 100 PB storage 
                : it is used for transfer of data from Data centre when they shutdown.
                : 24/7 security, dedicated guards,CCTV surveillance
        
        * all the data while transferring will be cryptographic encrypted 
        * we can use KMS encryption as well.

  --- Innovation with AWS --- 
        
        These are the services which are useful for building machine learning models or iot devices etc..

        -- Amazon SageMaker: 
                : Build , train, deploy machine learning models  
                : Our build custom models with all Open Source Framework.
                : with high compute and security 
        
        -- Amazon Augmented AI (Amazon A2I):
                : can build ML projects without having any PHD level skill.
        
        -- Amazon Lex:
                : which helps you to build interactive chat bots.
        
        -- Amazon Textract :
                : which is used to extract text from doc and make it more useful for enterprise.

        -- Amazon Deep Racer:
                : made for developers to experiment with Reinforcement learning.

        -- Amazon Ground Station:
                : setting up your own Satellite
                : pay only when you use.


-------- The Cloud Journey -------------
                
  --- AWS Well-Architected Framework ---
        : This is a tool we you use for excellence in few different categories.
                : Cost Optimization
                : Performance
                : Security
                : Sustainability
                : Reliability
                : Operational Excellence 
        
        Cost optimization : the ability to run systems to deliver business value at the lowest price point. 
        Performance efficiency : the ability to use computing resources efficiently to meet system requirements and to maintain that efficiency as demand changes and technologies evolve. 
        Security : is the ability to protect information, systems, and assets while delivering business value through risk assessments and mitigation strategies. 
        Sustainability: Understand your impact and Establish sustainability goals and Maximize utilization
        Reliability : Recover from infrastructure or service disruptions and ability of a workload to consistently and correctly perform its intended functions
        Operational Excellence : the ability to run and monitor systems to deliver business value and to continually improve supporting processes and procedures.  


  --- AWS Well-Architected Tool ---
        : Which helps in finding the above categories on resource use.



-------- The main 6 Advantages of using AWS ---------------

        : Trade upfront expense for variable expense 
        : Benefit from massive economies of scale.
        : Stop guessing capacity
        : Increase speed and agility
        : Stop spending money running and maintaining data centers
        : Go global in minutes



        Trade upfront expense for variable expense 
                        : expenses include data centers, physical servers, and other resources that you would need to invest in before using computing resources. 
                        : taking them for permanent and paying.
                        : Instead pay only when u use.
        
        Benefit from massive economies of scale.
                        : As AWS only buying hardware and maintaining those in more volumes, they get in less cost
                        : Instead of having our own we can achieve a lower variable cost.
                        : Receiving lower pay-as-you-go prices as the result of AWS customersâ€™ aggregated usage of services
        
        Stop guessing capacity
                        : U don't need to guess the size of db or capacity of infrastructure which may lead to more usage or very less usage.
                        : which leads to loss od money
                        : instead by Auto scaling and pay when u use.

        Increase speed and agility
                        : Instead of taking centers to permanent and pay all the time
                        : This flexibility also provides your development teams with more time to experiment and innovate.
                        : where u get the flexibility for free tier services to experience and innovate

        Stop spending money running and maintaining data centers
                        : If you have on-premiss data centers u need to maintain all the power, staff some other as well
                        : Instead if u choose AWS no need of focusing on all those things.
        
        Go global in minutes
                        :  enables you to quickly deploy applications to customers around the world, while providing them with low latency.
